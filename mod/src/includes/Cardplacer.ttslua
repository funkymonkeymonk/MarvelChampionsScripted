require('!/Decker')

--TODO: Put all of this into an object for namespace purposes
Cardplacer = {}
local CARDPOOL_BY_PACK_ID = {}

CARD_ID = 0

function setCardID(_, value, _)
    CARD_ID = value
end


-- Fix card pool to deal with duplicates
function buildCardPool(packID)
    if (CARDPOOL_BY_PACK_ID[packID] == nil) then
        local cardpool = {}
        local CARDPOOL_OBJ = getObjectFromGUID('843931')
        local CARDPOOL_JSON = CARDPOOL_OBJ.getVar('PACK_' .. packID)
        local CARDPOOL_DATA = JSON.decode(CARDPOOL_JSON)

        for _, cardData in pairs(CARDPOOL_DATA) do
            if (cardData.duplicate_of == nil) then
                local cardFace = cardData.FrontURL
                local cardBack = cardData.BackURL
                local cardAsset = Decker.Asset(cardFace, cardBack)
                local sideways = string.sub(cardData.type_code, -6, -1) == "scheme"

                local card = Decker.Card(cardAsset, 1, 1, { name=cardData.name, sideways=sideways, tags={type_code=cardData.type_code, code=cardData.code, subname=cardData.subname, faction_code=cardData.faction_code}})
                cardpool[cardData.code] = card
            else
                cardpool[cardData.code] = {duplicate_of = cardData.duplicate_of}
            end
        end
        CARDPOOL_BY_PACK_ID[packID] = cardpool
        return cardpool
    else
        return CARDPOOL_BY_PACK_ID[packID]
    end
end

function getCardFromCardPool(cardID)
    local packID = string.sub(cardID, 1,2)
    local cardpool = buildCardPool(packID)
    local card = cardpool[cardID]

    --Temporary work-around for cardpool issue
    if(card == nil) then card = getCardFromCardPool(cardID.."a") end

    return card
end

function getCard(player)
    local position = player.getPointerPosition()
    local cardID = CARD_ID
    local FACE_UP_ROTATION = {0, 180, 0}
    local FACE_DOWN_ROTATION = {0, 180, 180}
    local card = getCardFromCardPool(cardID)
    if (card.duplicate_of == nil) then
        card:spawn({position = position, rotation = FACE_UP_ROTATION})
        clearUI()
    else
        CARD_ID = card.duplicate_of
        getCard(player)
    end
end

function getCardByID(id, position, params)
    local position = position
    local cardID = id

    local params = params or {}
    local scale = params.scale or Global.getTable("CARD_SCALE_PLAYER")
    local name = params.name or ""
    local landscape = params.landscape or false

    local x = 0
    local y = 180
    local z = 0

    if (landscape) then y = 90 end
    if (params.flipped) then z = 180 end

    -- Default face up
    local rotation = {x, y, z}
--    if (params.flipped) then
--        rotation = {0, 180, 180}
--    end

    --landscape: 0, 90, 0
    --landscape flipped: 0, 90, 180

    local card = getCardFromCardPool(cardID)

    if (card.duplicate_of == nil) then
        card:spawn({position = position, scale = scale, rotation = rotation, name = name, locked=true})
        clearUI()
    else
        getCardByID(card.duplicate_of, position, params)
    end
end


function createDeck(params)
    local cards = params.cards
    local position = Vector(params.position)
    local scale = params.scale or Global.getTable("CARD_SCALE_PLAYER")
    local name = params.name or ""

    -- Default face down
    local rotation = {0, 180, 180}
    if (params.flipped) then
        rotation = {0, 180, 0}
    end

    deck = {}
    for cardID,number in pairs(cards) do
        for i = 1, number, 1 do
            local card = getCardFromCardPool(cardID)

            if (card.duplicate_of == nil) then
                table.insert(deck, card)
            else
                table.insert(deck, getCardFromCardPool(card.duplicate_of))
            end
        end
    end
    newDeck = Decker.Deck(deck)
    newDeck:spawn({position = position, scale = scale, rotation = rotation, name = name})
end

function createUI(_, menu_position)
    local xml = [[
<Panel width="250" height="150">
    <VerticalLayout childAlignment="UpperCenter" color="#CCCCCC" outline="#000000">
        <Text>Type in a card id</Text>
        <Text color="#444444">ex 01006 will spawn Aunt May.</Text>
        <InputField id="INPUT_CARD_ID" onValueChanged="setCardID"></InputField>
        <Button onClick="getCard">Spawn Card</Button>
    </VerticalLayout>
</Panel>
]]
    UI.setXml(xml)
end

function clearUI()
    UI.setXml("")
end