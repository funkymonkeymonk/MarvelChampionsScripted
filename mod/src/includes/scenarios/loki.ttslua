scenarios["loki"] =
{
    name="Loki",
    tileImageUrl="https://steamusercontent-a.akamaihd.net/ugc/1849305905150132430/6C8FCFC49383857A4A92407CE13656C5DE148F37/",
    villains={
        loki={
            name="Loki",
            hpCounter={
                imageUrl="https://steamusercontent-a.akamaihd.net/ugc/1849305905150132430/6C8FCFC49383857A4A92407CE13656C5DE148F37/",
                primaryButtonLabel="NEXT!",
                secondaryButton={
                    label="SWAP",
                    clickFunction="lokiSwapVillain",
                }
            },
            stages={
                stage1={
                    cardId="21160",
                    hitPointsPerPlayer=20
                },
                stage2={
                    cardId="21161",
                    hitPointsPerPlayer=20
                },
                stage3={
                    cardId="21162",
                    hitPointsPerPlayer=20
                },
                stage4={
                    cardId="21163",
                    hitPointsPerPlayer=20
                },
                stage5={
                    cardId="21164",
                    hitPointsPerPlayer=20
                }
            }
        }
    },
    schemes={
        main={
            stages={
                stage1={
                    cardId="21165",
                    startingThreatPerPlayer=1,
                    targetThreatPerPlayer=12
                }
            }
        }
    },
    cards={
        warInAsgard={
            cardId="21167",
            position={7.25, 1.00, 16.75},
            scale=Vector(Global.getVar("CARD_SCALE_ENCOUNTER")),
            landscape=true
        },
        infinityGuantlet={
            cardId="21129",
            position={-7.25, 0.97, 22.25},
            scale=Vector(Global.getVar("CARD_SCALE_ENCOUNTER"))
        }
    },
    decks={
        encounterDeck={
            name="Loki's Encounter Deck",
            cards={
                ["21166"]=1,
                ["21168"]=1,
                ["21169"]=1,
                ["21170"]=1,
                ["21171"]=1,
                ["21172"]=1,
                ["21173"]=1,
                ["21174"]=2,
                ["21175"]=2,
                ["21176"]=3
            }
        },
        infinityStones={
            name="Infinity Stones",
            position={-15.25, 1.25, 30.25},
            scale=Vector(Global.getVar("CARD_SCALE_ENCOUNTER")),
            cards={
                ["21130"]=1,
                ["21131"]=1,
                ["21132"]=1,
                ["21133"]=1,
                ["21134"]=1,
                ["21135"]=1
            }
        }
    },
    modularSets={
        infinityGauntlet="required",
        enchantress="recommended",
        frostGiants="recommended"
    }
}

function prepareScenario_loki()
  local encounterSetManager = getObjectFromGUID(Global.getVar("GUID_MODULAR_SET_MANAGER"))
  encounterSetManager.call("removeModularSet", {modularSetKey = "infinityGauntlet"})

  local villain = currentScenario.villains.loki
  local villainStages = {}

  for key, stage in pairs(villain.stages) do
      table.insert(villainStages, key)
  end

  villainStages = Global.call("shuffleTable", {table = villainStages})

  currentScenario.lokiQueue = villainStages
end

function getNextVillainStage_loki(params)
    currentScenario.currentLokiStage = currentScenario.lokiQueue[1]
    table.remove(currentScenario.lokiQueue, 1)
    local nextStage = currentScenario.villains.loki.stages[currentScenario.currentLokiStage]
    local lastStage = #currentScenario.lokiQueue == 0

    nextStage.showAdvanceButton = not lastStage

    return nextStage
end

function placeVillainStage_loki(params)
  local heroCount = params.heroCount
  local villain = currentScenario.villains.loki
  local stage = params.stage
  
  local villainPosition = villain.deckPosition or defaults.villainDeck.position
  local villainRotation = villain.deckRotation or defaults.villainDeck.rotation
  local villainScale = villain.deckScale or defaults.villainDeck.scale

  Global.call("moveCardFromPosition", {origin = villainPosition, zoneIndex = "victoryDisplay"})

  getCardByID(
    stage.cardId, 
      villainPosition, 
      {scale = villainScale, name = villain.name, flipped = false, locked=true})
  
  local hitPoints = (stage.hitPoints or 0) + ((stage.hitPointsPerPlayer or 0) * heroCount)
  local villainHpCounter = getObjectFromGUID(villain.hpCounter.guid)

    Wait.frames(
        function()
            villainHpCounter.call("setValue", {value = hitPoints}) 
          
            villainHpCounter.call("setAdvanceButtonOptions", {label = "Next!"})
            villainHpCounter.call("setSecondaryButtonOptions", {label = "Swap!", clickFunction = "lokiSwapVillain"})

            if(stage.showAdvanceButton) then
                villainHpCounter.call("showAdvanceButton")
                villainHpCounter.call("showSecondaryButton")
            else
                villainHpCounter.call("hideAdvanceButton")
                villainHpCounter.call("hideSecondaryButton")
            end
        end,
        20
    )
end

function lokiSwapVillain(params)
    if(#currentScenario.lokiQueue  == 0) then
        Global.call("showMessage", {message = "No more Lokis!"})
        return
    end
    local villain = currentScenario.villains.loki

    currentScenario.lokiQueue = Global.call("shuffleTable", {table = currentScenario.lokiQueue})

    local currentStage = currentScenario.currentLokiStage
    local swappedStage = currentScenario.lokiQueue[1]
    table.remove(currentScenario.lokiQueue, 1)
    table.insert(currentScenario.lokiQueue, currentStage)
    currentScenario.currentLokiStage = swappedStage

    local stage = currentScenario.villains.loki.stages[swappedStage]
    local villainPosition = villain.deckPosition or defaults.villainDeck.position
    local villainScale = villain.deckScale or defaults.villainDeck.scale

    Global.call("deleteCardAtPosition", {position = villainPosition})
  
    getCardByID(
        stage.cardId, 
          villainPosition, 
          {scale = villainScale, name = villain.name, flipped = false, locked=true})
end