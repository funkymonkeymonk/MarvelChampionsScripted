scenarios["towerDefense"] =
{
    name="Tower Defense",
    tileImageUrl="http://cloud-3.steamusercontent.com/ugc/1849305905150121236/51DE813B79BDB1100212F0F05F303100627912AC/",
    --placeBoostPanel=false,
    villains={
        proximaMidnight={
            name="Proxima Midnight",
            deckPosition={-6.84, 1.00, 20.44},
            hpCounter={
                imageUrl="http://cloud-3.steamusercontent.com/ugc/1849305905150135976/E9896414070810D2509CE451A33FDFB69BD082DB/",
                position={-6.84, 1.00, 29.16}
            },
            stages={
                stage1={
                    cardId="21092",
                    hitPointsPerPlayer=9
                },
                stage2={
                    cardId="21093",
                    hitPointsPerPlayer=12
                },
                stage3={
                    cardId="21094",
                    hitPointsPerPlayer=15
                }
            }
        },
        corvusGlaive={
            name="Corvus Glaive",
            deckPosition={5.25, 1.00, 20.43},
            hpCounter={
                imageUrl="http://cloud-3.steamusercontent.com/ugc/1849305905150124820/5FE7B3E843483F341D1E0AD49CC49C7744EA9086/",
                position={5.25, 0.96, 29.15}
            },
            stages={
                stage1={
                    cardId="21095",
                    hitPointsPerPlayer=8
                },
                stage2={
                    cardId="21096",
                    hitPointsPerPlayer=11
                },
                stage3={
                    cardId="21097",
                    hitPointsPerPlayer=14
                }
            }
        }
    },
    blackHole={
        position={-15.15, 1.13, 28.48}
    },
    schemes={
        underSiege={
            stages={
                stage1={
                    cardId="21098",
                    startingThreatPerPlayer=1,
                    targetThreatPerPlayer=6
                }
            },
            position={16.75, 0.97, 22.25},
            threatCounter={
                position={25.13, 1.01, 22.25},
                scale={1.61, 1.00, 1.61}
            }
        },
        armiesOfThanos={
            stages={
                stage1={
                    cardId="21099",
                    startingThreatPerPlayer=1,
                    targetThreatPerPlayer=6
                }
            },
            position={16.75, 0.97, 15.75},
            threatCounter={
                position={25.13, 1.01, 15.75},
                scale={1.61, 1.00, 1.61}
            }
        }
    },
    cards={
        avengersTower={
            cardId="21100",
            position={15.50, 1.25, 30.00},
            scale=Vector(Global.getVar("CARD_SCALE_ENCOUNTER"))
        },
        focusedDefense={
            cardId="21101",
            position={19.25, 3.00, 15.75},
            scale=Vector(Global.getVar("CARD_SCALE_PLAYER"))
        }
    },            
    counters={
        damage={
            type="general",
            position={14.70, 1.10, 30.90},
            scale={0.50, 1.00, 0.50},
            locked=true
        }
    },
    decks={
        encounterDeck={
            name="Tower Defense Encounter Deck",
            position={-19.25, 1.00, 22.25},
            discardPosition={-24.75, 1.00, 22.25},
            cards={
                ["21102"]=4,
                ["21103"]=1,
                ["21104"]=1,
                ["21105"]=2,
                ["21106"]=2,
                ["21107"]=2,
                ["21108"]=1,
                ["21109"]=2,
                ["21110"]=2
            }
        }
    },
    modularSets={
        armiesOfTitan="recommended"
    },
        zones={
            sideScheme = {
            position = {22.00, 1.00, 7.00},
            scale = {21.00, 1.00, 10.00},
            firstCardPosition = {15.25, 0.97, 9.75},
            horizontalGap = 7,
            verticalGap = 5,
            layoutDirection = "vertical",
            width = 3,
            height = 2
        },
        attachment = {
            position = nil
        }
    }
}
